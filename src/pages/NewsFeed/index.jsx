import React, { useState } from 'react';
import { FaPlus, FaEllipsisH, FaHeart, FaRegHeart, FaComment, FaShare, FaBookmark, FaRegBookmark, FaGlobeAsia, FaUserFriends, FaLock, FaImage, FaVideo, FaSmile, FaMapMarkerAlt, FaCalendarAlt, FaUsers } from 'react-icons/fa';
import {
  NewsfeedContainer,
  StoriesSection,
  StoriesHeader,
  StoriesTitle,
  StoriesViewAll,
  StoriesContainer,
  StoryCard,
  StoryImage,
  StoryUser,
  StoryUserImage,
  StoryUserName,
  CreateStoryCard,
  CreateStoryIcon,
  CreateStoryText,
  FeedSection,
  PostCard,
  PostHeader,
  PostAuthor,
  PostAuthorImage,
  PostAuthorInfo,
  PostAuthorName,
  PostMeta,
  PostTime,
  PostPrivacy,
  PostOptions,
  PostContent,
  PostText,
  PostImage,
  PostActions,
  PostAction,
  PostStats,
  PostLikes,
  PostComments,
  PostShares,
  CommentSection,
  CommentForm,
  CommentInput,
  CommentButton,
  SidebarSection,
  SidebarCard,
  SidebarTitle,
  SidebarContent,
  EventItem,
  EventDate,
  EventInfo,
  EventTitle,
  EventMeta,
  BirthdayItem,
  BirthdayIcon,
  BirthdayText,
  SuggestedFriend,
  SuggestedFriendImage,
  SuggestedFriendInfo,
  SuggestedFriendName,
  SuggestedFriendMeta,
  SuggestedFriendActions,
  FriendButton,
  DismissButton,
  NewsfeedContent,
  MainContent,
  RightSidebar,
  CreatePostCard,
  CreatePostHeader,
  CreatePostInput,
  CreatePostActions,
  CreatePostAction,
  CreatePostButton,
  CreatePostUserImage,
  LeftSidebar,
  SidebarLink,
  SidebarIcon,
  SidebarText,
  SidebarLinkActive
} from './styles';

const Newsfeed = () => {
  const [likedPosts, setLikedPosts] = useState({});
  const [savedPosts, setSavedPosts] = useState({});
  const [commentText, setCommentText] = useState('');
  const [postText, setPostText] = useState('');
  
  // D·ªØ li·ªáu m·∫´u cho stories
  const stories = [
    {
      id: 1,
      user: {
        id: 1,
        name: 'Nguy·ªÖn VƒÉn A',
        image: 'https://randomuser.me/api/portraits/men/32.jpg'
      },
      image: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb'
    },
    {
      id: 2,
      user: {
        id: 2,
        name: 'Tr·∫ßn Th·ªã B',
        image: 'https://randomuser.me/api/portraits/women/44.jpg'
      },
      image: 'https://images.unsplash.com/photo-1511300636408-a63a89df3482'
    },
    {
      id: 3,
      user: {
        id: 3,
        name: 'L√™ VƒÉn C',
        image: 'https://randomuser.me/api/portraits/men/62.jpg'
      },
      image: 'https://images.unsplash.com/photo-1501854140801-50d01698950b'
    },
    {
      id: 4,
      user: {
        id: 4,
        name: 'Ph·∫°m Th·ªã D',
        image: 'https://randomuser.me/api/portraits/women/17.jpg'
      },
      image: 'https://images.unsplash.com/photo-1468078809804-4c7b3e60a478'
    },
    {
      id: 5,
      user: {
        id: 5,
        name: 'Ho√†ng VƒÉn E',
        image: 'https://randomuser.me/api/portraits/men/91.jpg'
      },
      image: 'https://images.unsplash.com/photo-1498307833015-e7b400441eb8'
    }
  ];
  
  // D·ªØ li·ªáu m·∫´u cho b√†i vi·∫øt
  const posts = [
    {
      id: 1,
      author: {
        id: 2,
        name: 'Tr·∫ßn Th·ªã B',
        image: 'https://randomuser.me/api/portraits/women/44.jpg'
      },
      time: '2 gi·ªù tr∆∞·ªõc',
      privacy: 'public',
      content: 'H√¥m nay th·∫≠t l√† m·ªôt ng√†y tuy·ªát v·ªùi! T√¥i v·ª´a ho√†n th√†nh d·ª± √°n l·ªõn v√† ƒë∆∞·ª£c s·∫øp khen ng·ª£i. C·∫£m th·∫•y r·∫•t h·∫°nh ph√∫c v√† t·ª± h√†o v·ªÅ b·∫£n th√¢n. üòä',
      image: 'https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05',
      likes: 124,
      comments: 32,
      shares: 8
    },
    {
      id: 2,
      author: {
        id: 3,
        name: 'L√™ VƒÉn C',
        image: 'https://randomuser.me/api/portraits/men/62.jpg'
      },
      time: '5 gi·ªù tr∆∞·ªõc',
      privacy: 'friends',
      content: 'V·ª´a kh√°m ph√° m·ªôt qu√°n c√† ph√™ m·ªõi toanh ·ªü qu·∫≠n 1. Kh√¥ng gian c·ª±c k·ª≥ ·∫•m c√∫ng v√† ƒë·ªì u·ªëng th√¨ ngon tuy·ªát! M·ªçi ng∆∞·ªùi c√≥ th·ªùi gian gh√© qua th·ª≠ nh√©. ƒê·∫£m b·∫£o kh√¥ng l√†m c√°c b·∫°n th·∫•t v·ªçng ƒë√¢u. üëç',
      image: 'https://images.unsplash.com/photo-1445116572660-236099ec97a0',
      likes: 87,
      comments: 21,
      shares: 5
    },
    {
      id: 3,
      author: {
        id: 5,
        name: 'Ho√†ng VƒÉn E',
        image: 'https://randomuser.me/api/portraits/men/91.jpg'
      },
      time: '1 ng√†y tr∆∞·ªõc',
      privacy: 'public',
      content: 'Chia s·∫ª v·ªõi m·ªçi ng∆∞·ªùi m·ªôt v√†i m·∫πo nh·ªè ƒë·ªÉ gi·ªØ s·ª©c kh·ªèe trong m√πa d·ªãch:\n\n1. U·ªëng ƒë·ªß n∆∞·ªõc m·ªói ng√†y\n2. T·∫≠p th·ªÉ d·ª•c √≠t nh·∫•t 30 ph√∫t\n3. ƒê·∫£m b·∫£o ng·ªß ƒë·ªß 7-8 ti·∫øng\n4. ƒÇn nhi·ªÅu rau xanh v√† tr√°i c√¢y\n5. H·∫°n ch·∫ø ƒë·ªì ng·ªçt v√† ƒë·ªì chi√™n r√°n\n\nH√£y c√πng nhau gi·ªØ g√¨n s·ª©c kh·ªèe nh√©!',
      image: null,
      likes: 215,
      comments: 45,
      shares: 32
    },
    {
      id: 4,
      author: {
        id: 4,
        name: 'Ph·∫°m Th·ªã D',
        image: 'https://randomuser.me/api/portraits/women/17.jpg'
      },
      time: '2 ng√†y tr∆∞·ªõc',
      privacy: 'public',
      content: 'Cu·ªëi tu·∫ßn v·ª´a r·ªìi m√¨nh ƒë√£ c√≥ chuy·∫øn du l·ªãch ƒê√† L·∫°t tuy·ªát v·ªùi. Th·ªùi ti·∫øt se l·∫°nh, phong c·∫£nh th√¨ ƒë·∫πp m√™ ly. ƒê·∫∑c bi·ªát l√† ƒë∆∞·ª£c th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn ƒë·∫∑c s·∫£n n∆°i ƒë√¢y. Nh·∫•t ƒë·ªãnh s·∫Ω quay l·∫°i v√†o d·ªãp cu·ªëi nƒÉm! ‚ù§Ô∏è',
      image: 'https://images.unsplash.com/photo-1464822759023-fed622ff2c3b',
      likes: 178,
      comments: 38,
      shares: 12
    }
  ];
  
  // D·ªØ li·ªáu m·∫´u cho s·ª± ki·ªán
  const events = [
    {
      id: 1,
      title: 'H·ªôi th·∫£o C√¥ng ngh·ªá AI 2023',
      date: {
        day: '15',
        month: 'Th10'
      },
      location: 'Trung t√¢m H·ªôi ngh·ªã Qu·ªëc gia, H√† N·ªôi',
      attendees: 128
    },
    {
      id: 2,
      title: 'Workshop Thi·∫øt k·∫ø UX/UI cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu',
      date: {
        day: '22',
        month: 'Th10'
      },
      location: 'Dreamplex Coworking Space, TP.HCM',
      attendees: 56
    },
    {
      id: 3,
      title: 'Offline Meeting - C·ªông ƒë·ªìng React Vietnam',
      date: {
        day: '29',
        month: 'Th10'
      },
      location: 'Gong Cha Coffee, ƒê√† N·∫µng',
      attendees: 42
    }
  ];
  
  // D·ªØ li·ªáu m·∫´u cho sinh nh·∫≠t
  const birthdays = [
    {
      id: 1,
      name: 'Nguy·ªÖn Th·ªã H∆∞∆°ng',
      relation: 'b·∫°n c·ªßa b·∫°n'
    },
    {
      id: 2,
      name: 'Tr·∫ßn VƒÉn Minh',
      relation: 'ƒë·ªìng nghi·ªáp'
    }
  ];
  
  // D·ªØ li·ªáu m·∫´u cho g·ª£i √Ω k·∫øt b·∫°n
  const suggestedFriends = [
    {
      id: 1,
      name: 'L√™ Th·ªã Hoa',
      image: 'https://randomuser.me/api/portraits/women/63.jpg',
      mutualFriends: 5
    },
    {
      id: 2,
      name: 'Ph·∫°m VƒÉn Tu·∫•n',
      image: 'https://randomuser.me/api/portraits/men/55.jpg',
      mutualFriends: 3
    },
    {
      id: 3,
      name: 'Ng√¥ Th·ªã Mai',
      image: 'https://randomuser.me/api/portraits/women/33.jpg',
      mutualFriends: 2
    }
  ];
  
  const handleLikePost = (postId) => {
    setLikedPosts(prev => ({
      ...prev,
      [postId]: !prev[postId]
    }));
  };
  
  const handleSavePost = (postId) => {
    setSavedPosts(prev => ({
      ...prev,
      [postId]: !prev[postId]
    }));
  };
  
  const handleCommentSubmit = (e, postId) => {
    e.preventDefault();
    if (commentText.trim()) {
      console.log(`ƒê√£ b√¨nh lu·∫≠n "${commentText}" v√†o b√†i vi·∫øt ${postId}`);
      setCommentText('');
    }
  };
  
  const handleCreatePost = (e) => {
    e.preventDefault();
    if (postText.trim()) {
      console.log(`ƒê√£ t·∫°o b√†i vi·∫øt m·ªõi: "${postText}"`);
      setPostText('');
    }
  };
  
  const getPrivacyIcon = (privacy) => {
    switch (privacy) {
      case 'public':
        return <FaGlobeAsia />;
      case 'friends':
        return <FaUserFriends />;
      case 'private':
        return <FaLock />;
      default:
        return <FaGlobeAsia />;
    }
  };
  
  return (
    <NewsfeedContainer>
      <NewsfeedContent>
        <LeftSidebar>
          <SidebarLinkActive>
            <SidebarIcon>
              <img src="https://randomuser.me/api/portraits/men/1.jpg" alt="Profile" />
            </SidebarIcon>
            <SidebarText>Nguy·ªÖn VƒÉn A</SidebarText>
          </SidebarLinkActive>
          
          <SidebarLink>
            <SidebarIcon>
              <FaUserFriends />
            </SidebarIcon>
            <SidebarText>B·∫°n b√®</SidebarText>
          </SidebarLink>
          
          <SidebarLink>
            <SidebarIcon>
              <FaBookmark />
            </SidebarIcon>
            <SidebarText>ƒê√£ l∆∞u</SidebarText>
          </SidebarLink>
          
          <SidebarLink>
            <SidebarIcon>
              <FaVideo />
            </SidebarIcon>
            <SidebarText>Watch</SidebarText>
          </SidebarLink>
          
          <SidebarLink>
            <SidebarIcon>
              <FaCalendarAlt />
            </SidebarIcon>
            <SidebarText>S·ª± ki·ªán</SidebarText>
          </SidebarLink>
          
          <SidebarLink>
            <SidebarIcon>
              <FaUsers />
            </SidebarIcon>
            <SidebarText>Nh√≥m</SidebarText>
          </SidebarLink>
        </LeftSidebar>
        
        <MainContent>
          <StoriesSection>
            <StoriesHeader>
              <StoriesTitle>Stories</StoriesTitle>
              <StoriesViewAll>Xem t·∫•t c·∫£</StoriesViewAll>
            </StoriesHeader>
            
            <StoriesContainer>
              <CreateStoryCard>
                <StoryImage src="https://images.unsplash.com/photo-1535713875002-d1d0cf377fde" alt="Your Story" />
                <CreateStoryIcon>
                  <FaPlus />
                </CreateStoryIcon>
                <CreateStoryText>T·∫°o story</CreateStoryText>
              </CreateStoryCard>
              
              {stories.map(story => (
                <StoryCard key={story.id}>
                  <StoryImage src={story.image} alt={story.user.name} />
                  <StoryUser>
                    <StoryUserImage src={story.user.image} alt={story.user.name} />
                    <StoryUserName>{story.user.name}</StoryUserName>
                  </StoryUser>
                </StoryCard>
              ))}
            </StoriesContainer>
          </StoriesSection>
          
          <FeedSection>
            <CreatePostCard>
              <CreatePostHeader>
                <CreatePostUserImage src="https://randomuser.me/api/portraits/men/1.jpg" alt="Your Profile" />
                <CreatePostInput 
                  placeholder="B·∫°n ƒëang nghƒ© g√¨?" 
                  value={postText}
                  onChange={(e) => setPostText(e.target.value)}
                />
              </CreatePostHeader>
              
              <CreatePostActions>
                <CreatePostAction>
                  <FaImage /> ·∫¢nh/Video
                </CreatePostAction>
                <CreatePostAction>
                  <FaSmile /> C·∫£m x√∫c
                </CreatePostAction>
                <CreatePostAction>
                  <FaMapMarkerAlt /> Check in
                </CreatePostAction>
                <CreatePostButton onClick={handleCreatePost}>
                  ƒêƒÉng
                </CreatePostButton>
              </CreatePostActions>
            </CreatePostCard>
            
            {posts.map(post => (
              <PostCard key={post.id}>
                <PostHeader>
                  <PostAuthor>
                    <PostAuthorImage src={post.author.image} alt={post.author.name} />
                    <PostAuthorInfo>
                      <PostAuthorName>{post.author.name}</PostAuthorName>
                      <PostMeta>
                        <PostTime>{post.time}</PostTime>
                        <PostPrivacy>{getPrivacyIcon(post.privacy)}</PostPrivacy>
                      </PostMeta>
                    </PostAuthorInfo>
                  </PostAuthor>
                  <PostOptions>
                    <FaEllipsisH />
                  </PostOptions>
                </PostHeader>
                
                <PostContent>
                  <PostText>{post.content}</PostText>
                  {post.image && <PostImage src={post.image} alt="Post" />}
                </PostContent>
                
                <PostStats>
                  <PostLikes>
                    <FaHeart /> {likedPosts[post.id] ? post.likes + 1 : post.likes} l∆∞·ª£t th√≠ch
                  </PostLikes>
                  <div>
                    <PostComments>{post.comments} b√¨nh lu·∫≠n</PostComments>
                    <PostShares>{post.shares} chia s·∫ª</PostShares>
                  </div>
                </PostStats>
                
                <PostActions>
                  <PostAction onClick={() => handleLikePost(post.id)}>
                    {likedPosts[post.id] ? <FaHeart className="liked" /> : <FaRegHeart />}
                    Th√≠ch
                  </PostAction>
                  <PostAction>
                    <FaComment />
                    B√¨nh lu·∫≠n
                  </PostAction>
                  <PostAction>
                    <FaShare />
                    Chia s·∫ª
                  </PostAction>
                  <PostAction onClick={() => handleSavePost(post.id)}>
                    {savedPosts[post.id] ? <FaBookmark /> : <FaRegBookmark />}
                    L∆∞u
                  </PostAction>
                </PostActions>
                
                <CommentSection>
                  <CommentForm onSubmit={(e) => handleCommentSubmit(e, post.id)}>
                    <CommentInput 
                      placeholder="Vi·∫øt b√¨nh lu·∫≠n..." 
                      value={commentText}
                      onChange={(e) => setCommentText(e.target.value)}
                    />
                    <CommentButton type="submit">G·ª≠i</CommentButton>
                  </CommentForm>
                </CommentSection>
              </PostCard>
            ))}
          </FeedSection>
        </MainContent>
        
        <RightSidebar>
          <SidebarSection>
            <SidebarCard>
              <SidebarTitle>Ng∆∞·ªùi li√™n h·ªá</SidebarTitle>
              <SidebarContent>
                {suggestedFriends.map(friend => (
                  <SuggestedFriend key={friend.id}>
                    <SuggestedFriendImage src={friend.image} alt={friend.name} />
                    <SuggestedFriendInfo>
                      <SuggestedFriendName>{friend.name}</SuggestedFriendName>
                    </SuggestedFriendInfo>
                  </SuggestedFriend>
                ))}
                
                <SuggestedFriend>
                  <SuggestedFriendImage src="https://randomuser.me/api/portraits/women/44.jpg" alt="Tr·∫ßn Th·ªã B" />
                  <SuggestedFriendInfo>
                    <SuggestedFriendName>Tr·∫ßn Th·ªã B</SuggestedFriendName>
                  </SuggestedFriendInfo>
                </SuggestedFriend>
                
                <SuggestedFriend>
                  <SuggestedFriendImage src="https://randomuser.me/api/portraits/men/62.jpg" alt="L√™ VƒÉn C" />
                  <SuggestedFriendInfo>
                    <SuggestedFriendName>L√™ VƒÉn C</SuggestedFriendName>
                  </SuggestedFriendInfo>
                </SuggestedFriend>
                
                <SuggestedFriend>
                  <SuggestedFriendImage src="https://randomuser.me/api/portraits/women/17.jpg" alt="Ph·∫°m Th·ªã D" />
                  <SuggestedFriendInfo>
                    <SuggestedFriendName>Ph·∫°m Th·ªã D</SuggestedFriendName>
                  </SuggestedFriendInfo>
                </SuggestedFriend>
                
                <SuggestedFriend>
                  <SuggestedFriendImage src="https://randomuser.me/api/portraits/men/91.jpg" alt="Ho√†ng VƒÉn E" />
                  <SuggestedFriendInfo>
                    <SuggestedFriendName>Ho√†ng VƒÉn E</SuggestedFriendName>
                  </SuggestedFriendInfo>
                </SuggestedFriend>
              </SidebarContent>
            </SidebarCard>
          </SidebarSection>
          
          <SidebarSection>
            <SidebarCard>
              <SidebarTitle>Sinh nh·∫≠t</SidebarTitle>
              <SidebarContent>
                {birthdays.map(birthday => (
                  <BirthdayItem key={birthday.id}>
                    <BirthdayIcon>üéÇ</BirthdayIcon>
                    <BirthdayText>
                      H√¥m nay l√† sinh nh·∫≠t c·ªßa <strong>{birthday.name}</strong> ({birthday.relation})
                    </BirthdayText>
                  </BirthdayItem>
                ))}
              </SidebarContent>
            </SidebarCard>
          </SidebarSection>
          
          <SidebarSection>
            <SidebarCard>
              <SidebarTitle>S·ª± ki·ªán s·∫Øp t·ªõi</SidebarTitle>
              <SidebarContent>
                {events.map(event => (
                  <EventItem key={event.id}>
                    <EventDate>
                      <div className="day">{event.date.day}</div>
                      <div className="month">{event.date.month}</div>
                    </EventDate>
                    <EventInfo>
                      <EventTitle>{event.title}</EventTitle>
                      <EventMeta>
                        <div className="location">{event.location}</div>
                        <div className="attendees">{event.attendees} ng∆∞·ªùi tham gia</div>
                      </EventMeta>
                    </EventInfo>
                  </EventItem>
                ))}
              </SidebarContent>
            </SidebarCard>
          </SidebarSection>
        </RightSidebar>
      </NewsfeedContent>
    </NewsfeedContainer>
  );
};

export default Newsfeed; 